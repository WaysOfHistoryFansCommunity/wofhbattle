{"meta":{"feedback_varyings":null,"interface_block_bindings":[[0,"InstanceBlock"]],"sampler_default_values":[["colorTex",0]],"shader_parameters":[["fragment","sampler2D","colorTex",1],["fragment","float","fowParameter",1],["fragment","int","style",1]],"vertex_attributes":null},"stages":{"fragment":["#version 300 es","precision mediump float;","precision mediump sampler3D;","#define transformFeedback(varName)","#if (__VERSION__ >= 330) || (__VERSION__ == 300)","#define vertAttrib(Num, Type, Name) layout(location = Num) in Type Name","#else","#define vertAttrib(Num, Type, Name) attribute Type Name","#endif","#if __VERSION__ <= 120","#define VAR_SMOOTH_IN(type, name) varying type name","#define VAR_FLAT_IN(type, name) varying type name","#define VAR_SMOOTH_OUT(type, name) varying type name","#define VAR_FLAT_OUT(type, name) varying type name","#define SAMPLE_2D(_smplr, _tc) (texture2D(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (texture2D(_smplr, _tc))","#define SAMPLE_CUBE(_smplr, _tc) (textureCube(_smplr, _tc))","#else","#define VAR_SMOOTH_IN(type, name) smooth in type name","#define VAR_FLAT_IN(type, name) flat in type name","#define VAR_SMOOTH_OUT(type, name) smooth out type name","#define VAR_FLAT_OUT(type, name) flat out type name","#define SAMPLE_2D(_smplr, _tc) (texture(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (textureGrad(_smplr, _tc, dFdx(Fx), dFdy(Fy)))","#define SAMPLE_CUBE(_smplr, _tc) (texture(_smplr, _tc))","#endif","#if (__VERSION__ < 130) || defined(NO_RG)","#define NM_XY ra","#else","#define NM_XY rg","#endif","#ifdef FOG_OF_WAR_POSTPROCESS","#define DECLARE_FRAGCOLOR layout(location = 0) out vec4 outFragColor; layout(location = 2) out vec4 outFowBuffer;","#else","#define DECLARE_FRAGCOLOR layout(location = 0) out vec4 outFragColor;","#endif","#define outFragDepth gl_FragDepth","uniform sampler2D colorTex ;","DECLARE_FRAGCOLOR","uniform float fowParameter;","uniform int style;","smooth in vec2 tileCoord;","flat in vec4 colorMultiplier;","flat in vec4 texturePositionSize;","flat in vec4 tcDisplacementClippedCenter;","flat in vec4 secondaryColor;","flat in vec4 tcMatrix;","flat in vec3 secondPositionInterpParameter;","#define tcLeft texturePositionSize.x","#define tcSizeX texturePositionSize.z","#define tcBottom texturePositionSize.y","#define tcSizeY texturePositionSize.w","#define tcDisplacement tcDisplacementClippedCenter.xy","#define clippedCenter tcDisplacementClippedCenter.zw","#define secondPosition secondPositionInterpParameter.xy","#define interpParameter secondPositionInterpParameter.z","#define styleDefault 0","#define styleMixRgByFow 1","#define styleFont 2","#define styleStrokedFont 3","#define styleInterpolatedDefault 4","void main()","{","vec2 size = texturePositionSize.zw;","vec2 tc = texturePositionSize.xy + fract(tileCoord) * size;","vec2 scaledTileCoord = tileCoord * size;","vec2 tcDisplaced = fract((tc + tcDisplacement - texturePositionSize.xy) / size) * size + texturePositionSize.xy;","mat2 rot = mat2(tcMatrix.x, tcMatrix.y, tcMatrix.z, tcMatrix.w);","tcDisplaced = rot * (tcDisplaced - clippedCenter) + clippedCenter;","vec4 result = textureGrad(colorTex, tcDisplaced, dFdx(scaledTileCoord), dFdy(scaledTileCoord));","switch (style) {","case styleDefault:","outFragColor = result * colorMultiplier;","break;","case styleMixRgByFow:","outFragColor.a = 1.0 - (result.r * (1.0 - fowParameter) + result.g * fowParameter);","outFragColor.xyz = vec3(0.0);","break;","case styleFont:","outFragColor = vec4(colorMultiplier.rgb, result.r * colorMultiplier.a);","break;","case styleStrokedFont:","outFragColor = vec4(secondaryColor.rgb, result.g * colorMultiplier.a);","break;","case styleInterpolatedDefault:","outFragColor = mix(","result,","textureGrad(colorTex, tcDisplaced + secondPosition, dFdx(scaledTileCoord), dFdy(scaledTileCoord)),","interpParameter",") * colorMultiplier;","break;","}","#ifdef FOG_OF_WAR_POSTPROCESS","outFowBuffer.ra = vec2(1.0, result.a);","#endif","}"],"vertex":["#version 300 es","precision mediump float;","precision mediump sampler3D;","#define transformFeedback(varName)","#if (__VERSION__ >= 330) || (__VERSION__ == 300)","#define vertAttrib(Num, Type, Name) layout(location = Num) in Type Name","#else","#define vertAttrib(Num, Type, Name) attribute Type Name","#endif","#if __VERSION__ <= 120","#define VAR_SMOOTH_IN(type, name) varying type name","#define VAR_FLAT_IN(type, name) varying type name","#define VAR_SMOOTH_OUT(type, name) varying type name","#define VAR_FLAT_OUT(type, name) varying type name","#define SAMPLE_2D(_smplr, _tc) (texture2D(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (texture2D(_smplr, _tc))","#define SAMPLE_CUBE(_smplr, _tc) (textureCube(_smplr, _tc))","#else","#define VAR_SMOOTH_IN(type, name) smooth in type name","#define VAR_FLAT_IN(type, name) flat in type name","#define VAR_SMOOTH_OUT(type, name) smooth out type name","#define VAR_FLAT_OUT(type, name) flat out type name","#define SAMPLE_2D(_smplr, _tc) (texture(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (textureGrad(_smplr, _tc, dFdx(Fx), dFdy(Fy)))","#define SAMPLE_CUBE(_smplr, _tc) (texture(_smplr, _tc))","#endif","#if (__VERSION__ < 130) || defined(NO_RG)","#define NM_XY ra","#else","#define NM_XY rg","#endif","#ifndef IMGPARAMS_ARRAY_SIZE","#define IMGPARAMS_ARRAY_SIZE 1","#endif","struct InstancingData","{","vec4 imagePositionSize;","vec4 texturePositionSize;","vec4 clipLeftRightBottomTop;","vec4 colorMultiplier;","vec4 clipValues;","vec4 texAspectTilesCount0;","vec4 secondaryColor;","vec4 tcMatrixSecondPosition;","vec4 interpolationParameter;","};","layout(std140) uniform InstanceBlock","{","InstancingData instances[IMGPARAMS_ARRAY_SIZE];","};","smooth out vec2 tileCoord;","flat out vec4 colorMultiplier;","flat out vec4 texturePositionSize;","flat out vec4 tcDisplacementClippedCenter;","flat out vec4 secondaryColor;","flat out vec4 tcMatrix;","flat out vec3 secondPositionInterpParameter;","#define secondPosition secondPositionInterpParameter.xy","#define interpParameter secondPositionInterpParameter.z","#define tcDisplacement tcDisplacementClippedCenter.xy","#define clippedCenter tcDisplacementClippedCenter.zw","const vec2 vertexCoord[] = vec2[](","vec2(0.0, 1.0),","vec2(0.0, 0.0),","vec2(1.0, 1.0),","vec2(1.0, 0.0)",");","void main()","{","vec4 imagePositionSize = instances[gl_InstanceID].imagePositionSize;","texturePositionSize = instances[gl_InstanceID].texturePositionSize;","vec4 clipLeftRightBottomTop = instances[gl_InstanceID].clipLeftRightBottomTop;","colorMultiplier = instances[gl_InstanceID].colorMultiplier;","vec4 clipValues = instances[gl_InstanceID].clipValues;","vec2 clipStep = clipValues.xy;","float clipLeftAddition = clipValues.z;","float clipBottomAddition = clipValues.w;","vec4 texAspectTilesCount0 = instances[gl_InstanceID].texAspectTilesCount0;","float texAspect = texAspectTilesCount0.x;","vec2 tilesCount = texAspectTilesCount0.yz;","vec2 vertex = vertexCoord[gl_VertexID];","secondaryColor = instances[gl_InstanceID].secondaryColor;","vec4 tcMatrixSecondPosition = instances[gl_InstanceID].tcMatrixSecondPosition;","tcMatrix = vec4(tcMatrixSecondPosition.x, tcMatrixSecondPosition.y * texAspect, -tcMatrixSecondPosition.y / texAspect, tcMatrixSecondPosition.x);","secondPosition = tcMatrixSecondPosition.zw;","interpParameter = instances[gl_InstanceID].interpolationParameter.x;","vec2 ratio = abs(texturePositionSize.zw / imagePositionSize.zw);","vec2 clipSize = vec2(clipLeftRightBottomTop.y - clipLeftRightBottomTop.x, clipLeftRightBottomTop.w - clipLeftRightBottomTop.z);","vec2 texClipSize = clipSize * ratio;","vec2 texClipStep = clipStep * ratio;","float texClipLeft = texturePositionSize.x + texClipStep.x + clipLeftAddition;","float texClipBottom = texturePositionSize.y + texClipStep.y + clipBottomAddition;","float texClipRight = texClipLeft + texClipSize.x;","float texClipTop = texClipBottom + texClipSize.y;","clippedCenter = texturePositionSize.zw / 2.0 + texturePositionSize.xy;","clippedCenter.y = 1.0 - clippedCenter.y;","texturePositionSize.y = 1.0 - texturePositionSize.y;","texturePositionSize.w = -texturePositionSize.w;","float bottom = texClipBottom;","texClipBottom = 1.0 - texClipTop;","texClipTop = 1.0 - bottom;","vec2 imgLeftBottom = clamp(imagePositionSize.xy, clipLeftRightBottomTop.xz, clipLeftRightBottomTop.yw);","vec2 imgRightTop = clamp(imagePositionSize.xy + imagePositionSize.zw, clipLeftRightBottomTop.xz, clipLeftRightBottomTop.yw);","vec2 imgRatio = (imgRightTop - imgLeftBottom) / imagePositionSize.zw;","tcDisplacement = (clamp(texturePositionSize.xy, vec2(texClipLeft, texClipBottom), vec2(texClipRight, texClipTop)) - texturePositionSize.xy) * tilesCount;","tileCoord = vertex * tilesCount * imgRatio;","vec2 position = vertex * imagePositionSize.zw + imagePositionSize.xy;","position = clamp(position, clipLeftRightBottomTop.xz, clipLeftRightBottomTop.yw);","gl_Position = vec4(position, 0.0, 1.0);","}"]}}
