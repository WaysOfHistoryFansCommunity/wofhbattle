{"meta":{"feedback_varyings":null,"interface_block_bindings":null,"sampler_default_values":[["tex",0]],"shader_parameters":[["vertex","vec2","beginPosition",1],["fragment","vec4","clip",1],["fragment","vec4","colorFactor",1],["vertex","vec4","lengthThicknessWrapsDisplacement",1],["vertex","mat2","rotation",1],["fragment","sampler2D","tex",1]],"vertex_attributes":null},"stages":{"fragment":["#version 300 es","precision mediump float;","precision mediump sampler3D;","#define transformFeedback(varName)","#if (__VERSION__ >= 330) || (__VERSION__ == 300)","#define vertAttrib(Num, Type, Name) layout(location = Num) in Type Name","#else","#define vertAttrib(Num, Type, Name) attribute Type Name","#endif","#if __VERSION__ <= 120","#define VAR_SMOOTH_IN(type, name) varying type name","#define VAR_FLAT_IN(type, name) varying type name","#define VAR_SMOOTH_OUT(type, name) varying type name","#define VAR_FLAT_OUT(type, name) varying type name","#define SAMPLE_2D(_smplr, _tc) (texture2D(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (texture2D(_smplr, _tc))","#define SAMPLE_CUBE(_smplr, _tc) (textureCube(_smplr, _tc))","#else","#define VAR_SMOOTH_IN(type, name) smooth in type name","#define VAR_FLAT_IN(type, name) flat in type name","#define VAR_SMOOTH_OUT(type, name) smooth out type name","#define VAR_FLAT_OUT(type, name) flat out type name","#define SAMPLE_2D(_smplr, _tc) (texture(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (textureGrad(_smplr, _tc, dFdx(Fx), dFdy(Fy)))","#define SAMPLE_CUBE(_smplr, _tc) (texture(_smplr, _tc))","#endif","#if (__VERSION__ < 130) || defined(NO_RG)","#define NM_XY ra","#else","#define NM_XY rg","#endif","#ifdef FOG_OF_WAR_POSTPROCESS","#define DECLARE_FRAGCOLOR layout(location = 0) out vec4 outFragColor; layout(location = 2) out vec4 outFowBuffer;","#else","#define DECLARE_FRAGCOLOR layout(location = 0) out vec4 outFragColor;","#endif","#define outFragDepth gl_FragDepth","DECLARE_FRAGCOLOR","smooth in vec2 pointCoord;","smooth in vec2 texCoord;","uniform vec4 clip;","uniform vec4 colorFactor;","uniform sampler2D tex ;","float insideBox(vec2 v, vec2 bottomLeft, vec2 topRight)","{","vec2 s = step(bottomLeft, v) - step(topRight, v);","return s.x * s.y;","}","void main()","{","#ifdef OVERDRAW_FULL","outFragColor = vec4(0.1, 0.0, 0.0, 1.0);","#else","outFragColor = texture(tex, texCoord) * insideBox(pointCoord, clip.xz, clip.yw) * colorFactor;","#ifdef FOG_OF_WAR_POSTPROCESS","outFowBuffer = vec4(1.0, 0.0, 0.0, 1.0);","#endif","#ifdef OVERDRAW_ALPHA","outFragColor = vec4(0.1, 0.0, 0.0, 1.0) * insideBox(pointCoord, clip.xz, clip.yw);","#endif","#endif","}"],"vertex":["#version 300 es","precision mediump float;","precision mediump sampler3D;","#define transformFeedback(varName)","#if (__VERSION__ >= 330) || (__VERSION__ == 300)","#define vertAttrib(Num, Type, Name) layout(location = Num) in Type Name","#else","#define vertAttrib(Num, Type, Name) attribute Type Name","#endif","#if __VERSION__ <= 120","#define VAR_SMOOTH_IN(type, name) varying type name","#define VAR_FLAT_IN(type, name) varying type name","#define VAR_SMOOTH_OUT(type, name) varying type name","#define VAR_FLAT_OUT(type, name) varying type name","#define SAMPLE_2D(_smplr, _tc) (texture2D(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (texture2D(_smplr, _tc))","#define SAMPLE_CUBE(_smplr, _tc) (textureCube(_smplr, _tc))","#else","#define VAR_SMOOTH_IN(type, name) smooth in type name","#define VAR_FLAT_IN(type, name) flat in type name","#define VAR_SMOOTH_OUT(type, name) smooth out type name","#define VAR_FLAT_OUT(type, name) flat out type name","#define SAMPLE_2D(_smplr, _tc) (texture(_smplr, _tc))","#define SAMPLE_2D_GRAD(_smplr, _tc, Fx, Fy) (textureGrad(_smplr, _tc, dFdx(Fx), dFdy(Fy)))","#define SAMPLE_CUBE(_smplr, _tc) (texture(_smplr, _tc))","#endif","#if (__VERSION__ < 130) || defined(NO_RG)","#define NM_XY ra","#else","#define NM_XY rg","#endif","smooth out vec2 pointCoord;","smooth out vec2 texCoord;","const vec2 vertexCoord[] = vec2[](","vec2(0.0, 0.0),","vec2(1.0, 0.0),","vec2(1.0, 1.0),","vec2(0.0, 0.0),","vec2(1.0, 1.0),","vec2(0.0, 1.0)",");","uniform mat2 rotation;","uniform vec2 beginPosition;","uniform vec4 lengthThicknessWrapsDisplacement;","#define length (lengthThicknessWrapsDisplacement[0])","#define thickness (lengthThicknessWrapsDisplacement[1])","#define wrapsCount (lengthThicknessWrapsDisplacement[2])","#define displacement (lengthThicknessWrapsDisplacement[3])","void main()","{","vec2 v = vertexCoord[gl_VertexID];","texCoord.x = v.y;","texCoord.y = v.x * wrapsCount + displacement;","v.y = (v.y - 0.5) * thickness;","v.x *= length;","v = rotation * v + beginPosition;","gl_Position = vec4(v, 0.0, 1.0);","pointCoord = v * 1.000001;","}"]}}
